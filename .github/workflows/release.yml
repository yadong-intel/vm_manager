name: VM Manager Release

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"
  release:
    types: [published, edited]

jobs:
  build_ubuntu_gcc:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]

    steps:
      - uses: actions/checkout@v2
        with:
          path: vm-manager

      - name: setup
        run: |
          sudo apt-get --quiet update --yes
          sudo apt-get --quiet install --yes make libglib2.0-dev libncurses-dev libuuid1 uuid-dev libjson-c-dev devscripts build-essential lintian debhelper

      - name: build
        run: |
          cd vm-manager/
          debuild -b -uc -us --lintian-opts --profile debian

      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          name: vm-manager.${{ matrix.os }}.${{ github.run_id }}.${{ github.sha }}
          path: |
            vm-manager/debian/
            *.deb
            *.ddeb
            *.build
            *.buildinfo
            *.changes

  try_tag:
    runs-on: ubuntu-latest
    needs: build_ubuntu_gcc
    steps:
      - uses: actions/checkout@v2
        with:
          path: vm-manager

      - name: Download packages
        uses: actions/download-artifact@v3

      - name: Display
        run: ls -al vm-manager*

      - name: Set Default release version
        run: echo "REL_VER=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Tag
        uses: butlerlogic/action-autotag@stable
        if: ${{ (github.event_name == 'push') && (github.ref_type != 'tag') }}
        id: autotagger
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          strategy: regex
          root: "vm-manager/debian/changelog"
          regex_pattern: "([0-9\\.]{5,}([-\\+][\\w\\.0-9]+)?)"
          tag_prefix: "v"

      - name: Tag success
        if: steps.autotagger.outputs.tagname != ''
        run: echo "REL_VER=${{ steps.autotagger.outputs.tagname }}" >> $GITHUB_ENV

      - name: Copy packages
        id: copy_pkg
        run: |
          if [[ ${{ env.REL_VER }} =~ v*.*.* ]]; then
            cp $(realpath *.deb) vm-manager_${{ env.REL_VER }}_${{ matrix.os }}.deb
            for dir in *; do
              if [[ -d $dir && $dir == vm-manager*-18.04* ]]; then
                cp vm-manager.ubuntu-18.04*/*.deb vm-manager_${{ env.REL_VER }}_ubuntu-18.04.deb
              fi
              if [[ -d $dir && $dir == vm-manager*-20.04* ]]; then
                cp vm-manager.ubuntu-20.04*/*.deb vm-manager_${{ env.REL_VER }}_ubuntu-20.04.deb
              fi
            done
            echo ::set-output name=success::true
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        if: steps.copy_pkg.outputs.success == 'true'
        with:
          name: "Release ${{ env.REL_VER }}"
          tag_name: ${{ env.REL_VER }}
          generate_release_notes: true
          files: |
            vm-manager_${{ env.REL_VER }}_ubuntu-18.04.deb
            vm-manager_${{ env.REL_VER }}_ubuntu-20.04.deb
